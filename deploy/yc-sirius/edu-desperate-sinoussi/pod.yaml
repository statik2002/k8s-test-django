apiVersion: v1
kind: Pod
metadata:
  name: nginx
  namespace: edu-desperate-sinoussi
  uid: 661f586a-b6e0-4b9f-8289-5c3961eb06ba
  resourceVersion: '114382781'
  creationTimestamp: '2024-05-06T07:22:10Z'
  labels:
    app: nginx
    k8slens-edit-resource-version: v1
    owner: statik2002
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"nginx","namespace":"edu-desperate-sinoussi"},"spec":{"containers":[{"image":"nginx:1.14.2","name":"nginx","ports":[{"containerPort":80}]}]}}
  managedFields:
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: v1
      time: '2024-05-06T07:22:10Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:containers:
            k:{"name":"nginx"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":80,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
    - manager: kubelet
      operation: Update
      apiVersion: v1
      time: '2024-05-06T07:22:12Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.114.128.252"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      subresource: status
    - manager: node-fetch
      operation: Update
      apiVersion: v1
      time: '2024-05-06T09:17:24Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
            f:k8slens-edit-resource-version: {}
            f:owner: {}
  selfLink: /api/v1/namespaces/edu-desperate-sinoussi/pods/nginx
status:
  phase: Running
  conditions:
    - type: Initialized
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2024-05-06T07:22:10Z'
    - type: Ready
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2024-05-06T07:22:12Z'
    - type: ContainersReady
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2024-05-06T07:22:12Z'
    - type: PodScheduled
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2024-05-06T07:22:10Z'
  hostIP: 10.129.0.33
  podIP: 10.114.128.252
  podIPs:
    - ip: 10.114.128.252
  startTime: '2024-05-06T07:22:10Z'
  containerStatuses:
    - name: nginx
      state:
        running:
          startedAt: '2024-05-06T07:22:11Z'
      lastState: {}
      ready: true
      restartCount: 0
      image: docker.io/library/nginx:1.14.2
      imageID: >-
        docker.io/library/nginx@sha256:f7988fb6c02e0ce69257d9bd9cf37ae20a60f1df7563c3a2a6abe24160306b8d
      containerID: >-
        containerd://6aef7f8339c4d52f4894dc7f70391d6f4349af59e3180e40d6da4bd9be609448
      started: true
  qosClass: BestEffort
spec:
  volumes:
    - name: kube-api-access-vm5k5
      projected:
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              name: kube-root-ca.crt
              items:
                - key: ca.crt
                  path: ca.crt
          - downwardAPI:
              items:
                - path: namespace
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
        defaultMode: 420
    - name: ssl-secret
      secret:
        secretName: postgresql-ssl
  containers:
    - name: nginx
      image: nginx:1.14.2
      ports:
        - containerPort: 80
          protocol: TCP
      resources: {}
      command:
        - ls
        - "-l"
        - "/etc/secret-volume"
      volumeMounts:
        - name: kube-api-access-vm5k5
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        - name: ssl-secret
          readOnly: true
          mountPath: "/etc/secret-volume"
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      imagePullPolicy: IfNotPresent
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  dnsPolicy: ClusterFirst
  serviceAccountName: default
  serviceAccount: default
  nodeName: cl1r9igv5sn3odsgg3kg-izaf
  securityContext: {}
  schedulerName: default-scheduler
  tolerations:
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
  priority: 0
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority
